{"version":3,"sources":["store/reducers/todos.js","store/actions/index.js","store/reducers/visibilityFilter.js","store/reducers/index.js","store/configureStore.js","store/localStorage.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","serviceWorker.js","index.js"],"names":["todos","state","action","type","id","text","completed","filter","todo","map","nextTodoId","VisibilityFilters","visibilityFilter","combineReducers","configureStore","persistedState","stateName","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","Error","saveState","getState","Link","active","children","onClick","Button","variant","disableElevation","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","focus","Input","inputRef","node","width","color","Todo","onClickRemove","position","display","textAlign","padding","borderWidth","borderStyle","borderColor","FormControlLabel","textDecoration","marginRight","control","Checkbox","checked","onChange","name","label","top","right","TodoList","toggleTodo","deleteTodo","paddingLeft","paddingRight","key","getVisibleTodos","t","App","Container","maxWidth","marginTop","Box","boxShadow","Typography","gutterBottom","fontWeight","p","VisibleTodoList","Boolean","location","hostname","match","THEME","createMuiTheme","typography","overrides","MuiButton","root","margin","ReactDOM","render","theme","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1bafd99c.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false,\r\n                }\r\n            ]\r\n        case 'DELETE_TODO': \r\n            return state.filter(todo => todo.id !== action.id);\r\n        case 'TOGGLE_TODO': \r\n            return state.map(todo => \r\n                todo.id === action.id ? {...todo, completed: !todo.completed  }: todo\r\n            )\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default todos;","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\nexport const deleteTodo = id => ({\r\n  type: 'DELETE_TODO',\r\n  id\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions';\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})","import { createStore } from 'redux'\r\nimport throttle from 'lodash/throttle'\r\nimport rootReducer from './reducers';\r\nimport { loadState, saveState } from './localStorage'\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n  store.subscribe(throttle(() => {\r\n    saveState({\r\n      todos: store.getState().todos,\r\n      visibilityFilter: store.getState().visibilityFilter\r\n    })\r\n  }, 1000))\r\n\r\n  return store;\r\n}\r\n\r\nexport default configureStore;","export const loadState = stateName => {\r\n  try {\r\n    const serializedState = localStorage.getItem(stateName);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state, stateName) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(stateName, serializedState);\r\n  } catch (err) {\r\n    throw new Error(\"Can't save changes in local storage\");\r\n  }\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n  <Button variant=\"contained\" disableElevation\r\n    onClick={onClick}\r\n    disabled={active}\r\n    style={{\r\n      marginLeft: '4px'\r\n    }}\r\n  >\r\n    {children}\r\n  </Button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../store/actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../store/actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../store/actions'\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          if (!input.value.trim()) {\r\n            return\r\n          }\r\n          dispatch(addTodo(input.value))\r\n          input.value = ''\r\n          input.focus()\r\n        }}\r\n      >\r\n        <Input inputRef={node => (input = node)}  style={{width: '70%'}} />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{marginLeft: '10px'}}>Add Todo</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)","\r\n  import React from 'react'\r\n  import PropTypes from 'prop-types'\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n  import Button from '@material-ui/core/Button';\r\n  import Checkbox from '@material-ui/core/Checkbox';\r\n  import DeleteIcon from '@material-ui/icons/Delete';\r\n  const Todo = ({ onClick, completed, text, onClickRemove }) => (\r\n    <div style={{ position:'relative', width: '100%', display: 'block', textAlign:'left', padding:'5px 0', borderWidth:'0 0 1px 0', borderStyle:'solid', borderColor: '#333'}} >\r\n      <FormControlLabel style={{ textDecoration: completed ? 'line-through' : 'none', marginRight:'50px' }}\r\n      control={\r\n        <Checkbox\r\n        checked={completed}\r\n        onChange={onClick}\r\n        name=\"checkedB\"\r\n        color=\"primary\"\r\n          />\r\n        }\r\n        label={text}\r\n        />\r\n        <Button onClick={onClickRemove} style={{ position: 'absolute', top: '0', right:'0'}}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      </div>\r\n      )\r\n  \r\n  Todo.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }\r\n  \r\n  export default Todo;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo, deleteTodo }) => (\r\n  <ul style={{paddingLeft:'10px', paddingRight: '10px'}}>\r\n    {todos.map(todo => (\r\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} onClickRemove={() => deleteTodo(todo.id) } />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo, deleteTodo } from '../store/actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../store/actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n    //   throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id)),\r\n  deleteTodo: id => dispatch(deleteTodo(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst App = () => (\r\n  <Container maxWidth=\"sm\" maxWidth=\"md\" style={{ marginTop: '20px'}}>\r\n    <Box boxShadow={1} style={{ textAlign: 'center', padding: '10px', color: '#555'}}>\r\n      <Typography variant=\"h4\" gutterBottom fontWeight=\"fontWeightBold\">\r\n          <b>Add TODO</b>\r\n          <Box p={1} />\r\n        </Typography>\r\n      <AddTodo />\r\n      <Box p={1} />\r\n      <VisibleTodoList />\r\n      <Footer />\r\n    </Box>\r\n  </Container>\r\n)\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore  from './store/configureStore';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": `-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji`,\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        margin: '5px 0 5px',\n      },\n    },\n  },\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n  <MuiThemeProvider theme={THEME}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}